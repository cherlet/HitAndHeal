//
//  Monster.swift
//  HeatAndHeal
//
//  Created by –£—Å–º–∞–Ω –ú–∞—Ö–º—É—Ç—Ö–∞–∂–∏–µ–≤ on 03.10.2023.
//

import Foundation

class Monster: Creature {
    var attack: Int
    var defense: Int
    var health: Int
    var damage: ClosedRange<Int>
    
    init(attack: Int, defense: Int, health: Int, damage: ClosedRange<Int>) {
        guard attack >= 1 && attack <= 30 else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç–∞–∫–∏")
        }
        
        guard defense >= 1 && defense <= 30 else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞—â–∏—Ç—ã")
        }
        
        guard health >= 0 else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è")
        }
        
        guard damage.lowerBound >= 1 && damage.upperBound >= damage.lowerBound else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Ä–æ–Ω–∞")
        }
        
        self.attack = attack
        self.defense = defense
        self.health = health
        self.damage = damage
    }
}

// MARK: Text game
extension Monster {
    func attack(target: inout Player) {
        let power = hitPower(target)
        
        if power >= target.health {
            target.health = 0
            print("üëª –ú–æ–Ω—Å—Ç—Ä –∞—Ç–∞–∫—É–µ—Ç! –ù–∞–Ω–µ—Å–µ–Ω–æ \(power) —É—Ä–æ–Ω–∞. –ó–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: \(target.health). –í—ã —É–º–µ—Ä–ª–∏!")
        } else {
            target.health -= power
            print("üëπ –ú–æ–Ω—Å—Ç—Ä –∞—Ç–∞–∫—É–µ—Ç! –ù–∞–Ω–µ—Å–µ–Ω–æ \(power) —É—Ä–æ–Ω–∞. –ó–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: \(target.health)")
        }
    }
}
