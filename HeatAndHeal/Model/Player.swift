//
//  Player.swift
//  HeatAndHeal
//
//  Created by –£—Å–º–∞–Ω –ú–∞—Ö–º—É—Ç—Ö–∞–∂–∏–µ–≤ on 03.10.2023.
//

import Foundation

class Player: Creature {
    var attack: Int
    var defense: Int
    var health: Int
    var damage: ClosedRange<Int>
    
    let maxHealth: Int
    var healingPotionCount = 4
    
    init(attack: Int, defense: Int, health: Int, damage: ClosedRange<Int>) {
        guard attack >= 1 && attack <= 30 else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç–∞–∫–∏")
        }
        
        guard defense >= 1 && defense <= 30 else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞—â–∏—Ç—ã")
        }
        
        guard health >= 0 else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è")
        }
        
        guard damage.lowerBound >= 1 && damage.upperBound >= damage.lowerBound else {
            fatalError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Ä–æ–Ω–∞")
        }
        
        
        self.attack = attack
        self.defense = defense
        self.health = health
        self.damage = damage
        
        maxHealth = health
    }
    
    func heal() {
        let healingPotionPower = Int(Float(maxHealth) * 0.3)
        if healingPotionCount > 0 {
            health = min(health + healingPotionPower, maxHealth)
            healingPotionCount -= 1
        } else {
            print("–ó–µ–ª—å—è –∏—Å—Ü–µ–ª–µ–Ω–∏—è –∫–æ–Ω—á–∏–ª–∏—Å—å!")
        }
    }
}

// MARK: Text game
extension Player {
    func drinkPotion() {
        heal()
        print("üç∫ –ò–≥—Ä–æ–∫ –ø—å–µ—Ç –∑–µ–ª—å–µ –∏ –∏—Å—Ü–µ–ª—è–µ—Ç—Å—è. –¢–µ–∫—É—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: \(health)")
    }
    
    func attack(target: inout Monster) {
        let power = hitPower(target)
        
        if power >= target.health {
            target.health = 0
            print("ü•≥ –ì–µ—Ä–æ–π –∞—Ç–∞–∫—É–µ—Ç! –ù–∞–Ω–µ—Å–µ–Ω–æ \(power) —É—Ä–æ–Ω–∞. –ó–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: \(target.health). –í—ã –ø–æ–±–µ–¥–∏–ª–∏!")
        }
        
        target.health -= power
        print("‚öîÔ∏è –ò–≥—Ä–æ–∫ –∞—Ç–∞–∫—É–µ—Ç! –ù–∞–Ω–µ—Å–µ–Ω–æ \(power) —É—Ä–æ–Ω–∞. –ó–¥–æ—Ä–æ–≤—å–µ –º–æ–Ω—Å—Ç—Ä–∞: \(target.health)")
    }
}
